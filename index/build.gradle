buildscript{
  ext{
    springBootVersion = '1.5.2.RELEASE'
  }
  repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
    jcenter()
  }
  dependencies{
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath 'com.bmuschko:gradle-docker-plugin:3.0.6'
  }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.docker-remote-api'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  maven { url "http://repo.spring.io/release" }
  maven{url 'https://repo.spring.io/milestone'}
  maven{url 'https://repo.spring.io/snapshot'}
}

dependencies {
  compile 'org.codehaus.groovy:groovy-all:2.4.10' // Need this >= 2.4 for spock
  compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
  compile "org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}"
  compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
  compile 'org.springframework.data:spring-data-elasticsearch:2.1.1.RELEASE'

  testCompile 'org.mock-server:mockserver-netty:3.6.2'
  testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
  testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'

  testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

task createDockerfile(type: Dockerfile) {
  destFile = project.file('build/Dockerfile')
  from 'openjdk:8'
  workingDir '/usr/src/app'
  copyFile "libs/${project.name}-${project.version}.jar", '/usr/src/app'
  exposePort 8080
  defaultCommand "java", "-jar",  "/usr/src/app/${project.name}-${project.version}.jar"
}

task buildImage(type: DockerBuildImage) {
  dependsOn createDockerfile
  inputDir = createDockerfile.destFile.parentFile
  tag = "ncei/${rootProject.name}-${project.name}:${project.version}"
}

build.finalizedBy buildImage
