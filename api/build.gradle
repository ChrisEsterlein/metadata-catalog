buildscript {
  ext {
    springBootVersion = '1.5.3.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'groovy'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

ext {
  springCloudVersion = 'Dalston.RELEASE'
}

dependencies {
  compile 'org.codehaus.groovy:groovy-all:2.4.10'
  compile('org.springframework.cloud:spring-cloud-starter-eureka')
  compile('org.springframework.cloud:spring-cloud-starter')
  compile('org.springframework.cloud:spring-cloud-starter-zuul')
  compile('org.springframework.boot:spring-boot-starter-web')

  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4-rc-4'
  testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-4'
  testCompile 'io.rest-assured:rest-assured:3.0.2'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

configurations.configure {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
  integrationTest {
    groovy.srcDir file('src/integrationTest/groovy')
    //resources.srcDir file('src/integrationTest/resources')
    compileClasspath += main.output + test.output + configurations.testRuntime
    runtimeClasspath += output + compileClasspath
  }
}

task waitForStorage(
    type:Exec,
    description: 'Waits for storage to be available.',
    group: 'docker',
    dependsOn: [":storage:dockerComposeBlackboxUp"]
) {
  executable "bash" // TODO network name hardcoded
  args "-c", "docker run \
    --network storage_net \
    --rm willwill/wait-for-it \
    -h storage \
    -p 8080 -t 30"
}

task integrationTest(
    type: Test,
    description: 'Runs the integration tests',
    group: 'verification',
) {
  mustRunAfter test
  dependsOn waitForStorage
  finalizedBy ":storage:dockerComposeBlackboxDown"

  testClassesDir = sourceSets.integrationTest.output.classesDir
  classpath = sourceSets.integrationTest.runtimeClasspath
  reports.junitXml.destination = 'build/integration-test-results'
  reports.html.destination = 'build/reports/integrationTests'
}

check.dependsOn integrationTest